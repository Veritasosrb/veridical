# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rdHtr_HkPF5F35AXR3_GGKKc3yl4A8D_
"""

import random
import pandas as pd
from sklearn.model_selection import train_test_split
from keras.models import Sequential
from keras.layers import Dense, Dropout
from keras.optimizers import Adam

data=pd.read_excel("/content/Book3.xlsx")
data.head()

from sklearn.preprocessing import LabelEncoder
encoder = LabelEncoder()
data["plans"] = encoder.fit_transform(data["plans"])
y = data["plans"]
X_train, X_test, y_train, y_test = train_test_split(data.drop(["plans"], axis=1), y, test_size=0.2, random_state=42)

y_train

# Define the neural network architecture
model = Sequential()
model.add(Dense(1024, activation='relu', input_dim=X_train.shape[1]))
model.add(Dropout(0.2))
model.add(Dense(512, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(256, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(128, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(64, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(32, activation='relu'))
model.add(Dropout(0.2))
model.add(Dense(16, activation='softmax'))


model.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])# y_train = np.asarray(y_train).astype('str').reshape((-1,1))

history = model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=2000, batch_size=32)

score = model.evaluate(X_test, y_test)
print('Test Loss:', score[0])
print('Test Accuracy:', score[1])

import pickle
# create an iterator object with write permission - model.pkl
with open('model_pkl', 'wb') as files:
    pickle.dump(model, files)

X_test

model.predict([[93,32,1,0]])

y_test

import joblib
joblib.dump(model,"final.pkl")

m = joblib.load("/content/final.pkl")

m.predict([[93,32,1,0]])

model.save("kharachFinals.h5")


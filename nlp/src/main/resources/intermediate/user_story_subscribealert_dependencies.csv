"Test case ID","User Story","Keys of sentence","Sentence analysis","Basic Dependencies","Enhanced Dependencies","Enhanced Plus Plus dependencies","Sentiment"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=The user needs to subscribe to get the alerts. CharacterOffsetBegin=0 CharacterOffsetEnd=46 Tokens=[The-1, user-2, needs-3, to-4, subscribe-5, to-6, get-7, the-8, alerts-9, .-10] SentenceIndex=0 TokenBegin=0 TokenEnd=10 Mentions=[] CollapsedDependencies=-> needs/VBZ (root)
  -> user/NN (nsubj)
    -> The/DT (det)
  -> subscribe/VB (xcomp)
    -> to/TO (mark)
    -> get/VB (xcomp)
      -> to/TO (mark)
      -> alerts/VBZ (ccomp)
        -> the/DT (nsubj)
  -> ./. (punct)
 BasicDependencies=-> needs/VBZ (root)
  -> user/NN (nsubj)
    -> The/DT (det)
  -> subscribe/VB (xcomp)
    -> to/TO (mark)
    -> get/VB (xcomp)
      -> to/TO (mark)
      -> alerts/VBZ (ccomp)
        -> the/DT (nsubj)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> needs/VBZ (root)
  -> user/NN (nsubj)
    -> The/DT (det)
  -> subscribe/VB (xcomp)
    -> to/TO (mark)
    -> get/VB (xcomp)
      -> to/TO (mark)
      -> alerts/VBZ (ccomp)
        -> the/DT (nsubj)
  -> ./. (punct)
 EnhancedDependencies=-> needs/VBZ (root)
  -> user/NN (nsubj)
    -> The/DT (det)
  -> subscribe/VB (xcomp)
    -> user/NN (nsubj:xsubj)
    -> to/TO (mark)
    -> get/VB (xcomp)
      -> to/TO (mark)
      -> alerts/VBZ (ccomp)
        -> the/DT (nsubj)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> needs/VBZ (root)
  -> user/NN (nsubj)
    -> The/DT (det)
  -> subscribe/VB (xcomp)
    -> user/NN (nsubj:xsubj)
    -> to/TO (mark)
    -> get/VB (xcomp)
      -> to/TO (mark)
      -> alerts/VBZ (ccomp)
        -> the/DT (nsubj)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (NP (DT The) (NN user)) (VP (VBZ needs) (S (VP (TO to) (VP (VB subscribe) (S (VP (TO to) (VP (VB get) (SBAR (S (NP (DT the)) (VP (VBZ alerts))))))))))) (. .))) BinarizedTree=(ROOT (S (NP (DT The) (NN user)) (@S (VP (VBZ needs) (S (VP (TO to) (VP (VB subscribe) (S (VP (TO to) (VP (VB get) (SBAR (S (NP (DT the)) (VP (VBZ alerts))))))))))) (. .)))) CorefMentions=[The user, the] AlternativeDependencies=-> needs/VBZ (root)
  -> user/NN (nsubj)
    -> The/DT (det)
  -> subscribe/VB (xcomp)
    -> to/TO (aux)
    -> get/VB (xcomp)
      -> to/TO (aux)
      -> alerts/VBZ (ccomp)
        -> the/DT (nsubj)
 SentimentAnnotatedTree=(ROOT (NP (DT The) (NN user)) (@S (VP (VBZ needs) (S (TO to) (VP (VB subscribe) (S (TO to) (VP (VB get) (SBAR (NP the) (VP alerts))))))) (. .))) SentimentClass=Negative]","root(ROOT-0, needs-3)
det(user-2, The-1)
nsubj(needs-3, user-2)
mark(subscribe-5, to-4)
xcomp(needs-3, subscribe-5)
mark(get-7, to-6)
xcomp(subscribe-5, get-7)
nsubj(alerts-9, the-8)
ccomp(get-7, alerts-9)
punct(needs-3, .-10)
","root(ROOT-0, needs-3)
det(user-2, The-1)
nsubj(needs-3, user-2)
nsubj:xsubj(subscribe-5, user-2)
mark(subscribe-5, to-4)
xcomp(needs-3, subscribe-5)
mark(get-7, to-6)
xcomp(subscribe-5, get-7)
nsubj(alerts-9, the-8)
ccomp(get-7, alerts-9)
punct(needs-3, .-10)
","root(ROOT-0, needs-3)
det(user-2, The-1)
nsubj(needs-3, user-2)
nsubj:xsubj(subscribe-5, user-2)
mark(subscribe-5, to-4)
xcomp(needs-3, subscribe-5)
mark(get-7, to-6)
xcomp(subscribe-5, get-7)
nsubj(alerts-9, the-8)
ccomp(get-7, alerts-9)
punct(needs-3, .-10)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=User selects the Appliance_type on which they want to get alerts. CharacterOffsetBegin=47 CharacterOffsetEnd=112 Tokens=[User-1, selects-2, the-3, Appliance_type-4, on-5, which-6, they-7, want-8, to-9, get-10, alerts-11, .-12] SentenceIndex=1 TokenBegin=10 TokenEnd=22 Mentions=[Appliance_type] CollapsedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> alerts/VBZ (ccomp)
    -> Appliance_type/NN (nsubj)
      -> the/DT (det)
      -> want/VBP (acl:relcl)
        -> which/WDT (nmod:on)
          -> on/IN (case)
        -> they/PRP (nsubj)
        -> get/VB (xcomp)
          -> to/TO (mark)
  -> ./. (punct)
 BasicDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> alerts/VBZ (ccomp)
    -> Appliance_type/NN (nsubj)
      -> the/DT (det)
      -> want/VBP (acl:relcl)
        -> which/WDT (nmod)
          -> on/IN (case)
        -> they/PRP (nsubj)
        -> get/VB (xcomp)
          -> to/TO (mark)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> alerts/VBZ (ccomp)
    -> Appliance_type/NN (nsubj)
      -> the/DT (det)
      -> want/VBP (acl:relcl)
        -> which/WDT (nmod:on)
          -> on/IN (case)
        -> they/PRP (nsubj)
        -> get/VB (xcomp)
          -> to/TO (mark)
  -> ./. (punct)
 EnhancedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> alerts/VBZ (ccomp)
    -> Appliance_type/NN (nsubj)
      -> the/DT (det)
      -> which/WDT (ref)
        -> on/IN (case)
      -> want/VBP (acl:relcl)
        -> Appliance_type/NN (nmod:on)
        -> they/PRP (nsubj)
        -> get/VB (xcomp)
          -> they/PRP (nsubj:xsubj)
          -> to/TO (mark)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> alerts/VBZ (ccomp)
    -> Appliance_type/NN (nsubj)
      -> the/DT (det)
      -> which/WDT (ref)
        -> on/IN (case)
      -> want/VBP (acl:relcl)
        -> Appliance_type/NN (nmod:on)
        -> they/PRP (nsubj)
        -> get/VB (xcomp)
          -> they/PRP (nsubj:xsubj)
          -> to/TO (mark)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (NP (NN User)) (VP (VBZ selects) (SBAR (S (NP (NP (DT the) (NN Appliance_type)) (SBAR (WHPP (IN on) (WHNP (WDT which))) (S (NP (PRP they)) (VP (VBP want) (S (VP (TO to) (VP (VB get)))))))) (VP (VBZ alerts))))) (. .))) BinarizedTree=(ROOT (S (NP (NN User)) (@S (VP (VBZ selects) (SBAR (S (NP (NP (DT the) (NN Appliance_type)) (SBAR (WHPP (IN on) (WHNP (WDT which))) (S (NP (PRP they)) (VP (VBP want) (S (VP (TO to) (VP (VB get)))))))) (VP (VBZ alerts))))) (. .)))) CorefMentions=[the Appliance_type on which they want to get, they, User] AlternativeDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> alerts/VBZ (ccomp)
    -> Appliance_type/NN (nsubj)
      -> the/DT (det)
      -> want/VBP (rcmod)
        -> which/WDT (prep_on)
        -> they/PRP (nsubj)
        -> get/VB (xcomp)
          -> to/TO (aux)
 SentimentAnnotatedTree=(ROOT (NP User) (@S (VP (VBZ selects) (SBAR (NP (NP (DT the) (NN Appliance_type)) (SBAR (WHPP (IN on) (WHNP which)) (S (NP they) (VP (VBP want) (S (TO to) (VP get)))))) (VP alerts))) (. .))) SentimentClass=Negative]","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
det(Appliance_type-4, the-3)
nsubj(alerts-11, Appliance_type-4)
case(which-6, on-5)
nmod(want-8, which-6)
nsubj(want-8, they-7)
acl:relcl(Appliance_type-4, want-8)
mark(get-10, to-9)
xcomp(want-8, get-10)
ccomp(selects-2, alerts-11)
punct(selects-2, .-12)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
det(Appliance_type-4, the-3)
nmod:on(want-8, Appliance_type-4)
nsubj(alerts-11, Appliance_type-4)
case(which-6, on-5)
ref(Appliance_type-4, which-6)
nsubj(want-8, they-7)
nsubj:xsubj(get-10, they-7)
acl:relcl(Appliance_type-4, want-8)
mark(get-10, to-9)
xcomp(want-8, get-10)
ccomp(selects-2, alerts-11)
punct(selects-2, .-12)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
det(Appliance_type-4, the-3)
nmod:on(want-8, Appliance_type-4)
nsubj(alerts-11, Appliance_type-4)
case(which-6, on-5)
ref(Appliance_type-4, which-6)
nsubj(want-8, they-7)
nsubj:xsubj(get-10, they-7)
acl:relcl(Appliance_type-4, want-8)
mark(get-10, to-9)
xcomp(want-8, get-10)
ccomp(selects-2, alerts-11)
punct(selects-2, .-12)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. CharacterOffsetBegin=114 CharacterOffsetEnd=293 Tokens=[If-1, the-2, user-3, wants-4, to-5, set-6, the-7, alert-8, for-9, a-10, specific-11, appliance-12, Then-13, the-14, User-15, clicks-16, on-17, that-18, appliance-19, ,-20, Else-21, User-22, selects-23, as-24, many-25, appliances-26, as-27, possible-28, they-29, want-30, by-31, checking-32, the-33, box-34, .-35] SentenceIndex=2 TokenBegin=22 TokenEnd=57 Mentions=[] CollapsedDependencies=-> selects/VBZ (root)
  -> clicks/VBZ (ccomp)
    -> wants/VBZ (advcl)
      -> If/IN (mark)
      -> user/NN (nsubj)
        -> the/DT (det)
      -> set/VB (xcomp)
        -> to/TO (mark)
        -> alert/NN (dobj)
          -> the/DT (det)
          -> appliance/NN (nmod:for)
            -> for/IN (case)
            -> a/DT (det)
            -> specific/JJ (amod)
    -> Then/RB (advmod)
    -> User/NN (nsubj)
      -> the/DT (det)
    -> appliance/NN (nmod:on)
      -> on/IN (case)
      -> that/DT (det)
  -> ,/, (punct)
  -> User/NN (nsubj)
    -> Else/RB (advmod)
  -> appliances/NNS (nmod:as)
    -> as/IN (case)
    -> many/JJ (amod)
  -> possible/JJ (advcl)
    -> as/IN (case)
  -> want/VBP (ccomp)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl)
      -> by/IN (mark)
      -> box/NN (dobj)
        -> the/DT (det)
  -> ./. (punct)
 BasicDependencies=-> selects/VBZ (root)
  -> clicks/VBZ (ccomp)
    -> wants/VBZ (advcl)
      -> If/IN (mark)
      -> user/NN (nsubj)
        -> the/DT (det)
      -> set/VB (xcomp)
        -> to/TO (mark)
        -> alert/NN (dobj)
          -> the/DT (det)
          -> appliance/NN (nmod)
            -> for/IN (case)
            -> a/DT (det)
            -> specific/JJ (amod)
    -> Then/RB (advmod)
    -> User/NN (nsubj)
      -> the/DT (det)
    -> appliance/NN (nmod)
      -> on/IN (case)
      -> that/DT (det)
  -> ,/, (punct)
  -> User/NN (nsubj)
    -> Else/RB (advmod)
  -> appliances/NNS (nmod)
    -> as/IN (case)
    -> many/JJ (amod)
  -> possible/JJ (advcl)
    -> as/IN (case)
  -> want/VBP (ccomp)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl)
      -> by/IN (mark)
      -> box/NN (dobj)
        -> the/DT (det)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> selects/VBZ (root)
  -> clicks/VBZ (ccomp)
    -> wants/VBZ (advcl)
      -> If/IN (mark)
      -> user/NN (nsubj)
        -> the/DT (det)
      -> set/VB (xcomp)
        -> to/TO (mark)
        -> alert/NN (dobj)
          -> the/DT (det)
          -> appliance/NN (nmod:for)
            -> for/IN (case)
            -> a/DT (det)
            -> specific/JJ (amod)
    -> Then/RB (advmod)
    -> User/NN (nsubj)
      -> the/DT (det)
    -> appliance/NN (nmod:on)
      -> on/IN (case)
      -> that/DT (det)
  -> ,/, (punct)
  -> User/NN (nsubj)
    -> Else/RB (advmod)
  -> appliances/NNS (nmod:as)
    -> as/IN (case)
    -> many/JJ (amod)
  -> possible/JJ (advcl)
    -> as/IN (case)
  -> want/VBP (ccomp)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl)
      -> by/IN (mark)
      -> box/NN (dobj)
        -> the/DT (det)
  -> ./. (punct)
 EnhancedDependencies=-> selects/VBZ (root)
  -> clicks/VBZ (ccomp)
    -> wants/VBZ (advcl:if)
      -> If/IN (mark)
      -> user/NN (nsubj)
        -> the/DT (det)
      -> set/VB (xcomp)
        -> user/NN (nsubj:xsubj)
        -> to/TO (mark)
        -> alert/NN (dobj)
          -> the/DT (det)
          -> appliance/NN (nmod:for)
            -> for/IN (case)
            -> a/DT (det)
            -> specific/JJ (amod)
    -> Then/RB (advmod)
    -> User/NN (nsubj)
      -> the/DT (det)
    -> appliance/NN (nmod:on)
      -> on/IN (case)
      -> that/DT (det)
  -> ,/, (punct)
  -> User/NN (nsubj)
    -> Else/RB (advmod)
  -> appliances/NNS (nmod:as)
    -> as/IN (case)
    -> many/JJ (amod)
  -> possible/JJ (advcl:as)
    -> as/IN (case)
  -> want/VBP (ccomp)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl:by)
      -> by/IN (mark)
      -> box/NN (dobj)
        -> the/DT (det)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> selects/VBZ (root)
  -> clicks/VBZ (ccomp)
    -> wants/VBZ (advcl:if)
      -> If/IN (mark)
      -> user/NN (nsubj)
        -> the/DT (det)
      -> set/VB (xcomp)
        -> user/NN (nsubj:xsubj)
        -> to/TO (mark)
        -> alert/NN (dobj)
          -> the/DT (det)
          -> appliance/NN (nmod:for)
            -> for/IN (case)
            -> a/DT (det)
            -> specific/JJ (amod)
    -> Then/RB (advmod)
    -> User/NN (nsubj)
      -> the/DT (det)
    -> appliance/NN (nmod:on)
      -> on/IN (case)
      -> that/DT (det)
  -> ,/, (punct)
  -> User/NN (nsubj)
    -> Else/RB (advmod)
  -> appliances/NNS (nmod:as)
    -> as/IN (case)
    -> many/JJ (amod)
  -> possible/JJ (advcl:as)
    -> as/IN (case)
  -> want/VBP (ccomp)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl:by)
      -> by/IN (mark)
      -> box/NN (dobj)
        -> the/DT (det)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (S (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (VB set) (NP (NP (DT the) (NN alert)) (PP (IN for) (NP (DT a) (JJ specific) (NN appliance)))))))))) (ADVP (RB Then)) (NP (DT the) (NN User)) (VP (VBZ clicks) (PP (IN on) (NP (DT that) (NN appliance))))) (, ,) (NP (RB Else) (NN User)) (VP (VBZ selects) (PP (IN as) (NP (JJ many) (NNS appliances))) (PP (IN as) (ADJP (JJ possible))) (SBAR (S (NP (PRP they)) (VP (VBP want) (PP (IN by) (S (VP (VBG checking) (NP (DT the) (NN box))))))))) (. .))) BinarizedTree=(ROOT (S (S (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (VB set) (NP (NP (DT the) (NN alert)) (PP (IN for) (NP (DT a) (@NP (JJ specific) (NN appliance))))))))))) (@S (ADVP (RB Then)) (@S (NP (DT the) (NN User)) (VP (VBZ clicks) (PP (IN on) (NP (DT that) (NN appliance))))))) (@S (, ,) (@S (NP (RB Else) (NN User)) (@S (VP (@VP (@VP (VBZ selects) (PP (IN as) (NP (JJ many) (NNS appliances)))) (PP (IN as) (ADJP (JJ possible)))) (SBAR (S (NP (PRP they)) (VP (VBP want) (PP (IN by) (S (VP (VBG checking) (NP (DT the) (NN box))))))))) (. .)))))) CorefMentions=[the alert for a specific appliance, a specific appliance, the User, that appliance, Else User, many appliances, they, the box, the user] AlternativeDependencies=-> selects/VBZ (root)
  -> clicks/VBZ (ccomp)
    -> wants/VBZ (advcl)
      -> If/IN (mark)
      -> user/NN (nsubj)
        -> the/DT (det)
      -> set/VB (xcomp)
        -> to/TO (aux)
        -> alert/NN (dobj)
          -> the/DT (det)
          -> appliance/NN (prep_for)
            -> a/DT (det)
            -> specific/JJ (amod)
    -> Then/RB (advmod)
    -> User/NN (nsubj)
      -> the/DT (det)
    -> appliance/NN (prep_on)
      -> that/DT (det)
  -> User/NN (nsubj)
    -> Else/RB (advmod)
  -> appliances/NNS (prep_as)
    -> many/JJ (amod)
  -> possible/JJ (prep_as)
  -> want/VBP (ccomp)
    -> they/PRP (nsubj)
    -> checking/VBG (prepc_by)
      -> box/NN (dobj)
        -> the/DT (det)
 SentimentAnnotatedTree=(ROOT (S (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (TO to) (VP (VB set) (NP (NP (DT the) (NN alert)) (PP (IN for) (NP (DT a) (@NP (JJ specific) (NN appliance)))))))))) (@S (ADVP Then) (@S (NP (DT the) (NN User)) (VP (VBZ clicks) (PP (IN on) (NP (DT that) (NN appliance))))))) (@S (, ,) (@S (NP (RB Else) (NN User)) (@S (VP (@VP (@VP (VBZ selects) (PP (IN as) (NP (JJ many) (NNS appliances)))) (PP (IN as) (ADJP possible))) (SBAR (NP they) (VP (VBP want) (PP (IN by) (S (VBG checking) (NP (DT the) (NN box))))))) (. .))))) SentimentClass=Negative]","root(ROOT-0, selects-23)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
advcl(clicks-16, wants-4)
mark(set-6, to-5)
xcomp(wants-4, set-6)
det(alert-8, the-7)
dobj(set-6, alert-8)
case(appliance-12, for-9)
det(appliance-12, a-10)
amod(appliance-12, specific-11)
nmod(alert-8, appliance-12)
advmod(clicks-16, Then-13)
det(User-15, the-14)
nsubj(clicks-16, User-15)
ccomp(selects-23, clicks-16)
case(appliance-19, on-17)
det(appliance-19, that-18)
nmod(clicks-16, appliance-19)
punct(selects-23, ,-20)
advmod(User-22, Else-21)
nsubj(selects-23, User-22)
case(appliances-26, as-24)
amod(appliances-26, many-25)
nmod(selects-23, appliances-26)
case(possible-28, as-27)
advcl(selects-23, possible-28)
nsubj(want-30, they-29)
ccomp(selects-23, want-30)
mark(checking-32, by-31)
advcl(want-30, checking-32)
det(box-34, the-33)
dobj(checking-32, box-34)
punct(selects-23, .-35)
","root(ROOT-0, selects-23)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(set-6, user-3)
advcl:if(clicks-16, wants-4)
mark(set-6, to-5)
xcomp(wants-4, set-6)
det(alert-8, the-7)
dobj(set-6, alert-8)
case(appliance-12, for-9)
det(appliance-12, a-10)
amod(appliance-12, specific-11)
nmod:for(alert-8, appliance-12)
advmod(clicks-16, Then-13)
det(User-15, the-14)
nsubj(clicks-16, User-15)
ccomp(selects-23, clicks-16)
case(appliance-19, on-17)
det(appliance-19, that-18)
nmod:on(clicks-16, appliance-19)
punct(selects-23, ,-20)
advmod(User-22, Else-21)
nsubj(selects-23, User-22)
case(appliances-26, as-24)
amod(appliances-26, many-25)
nmod:as(selects-23, appliances-26)
case(possible-28, as-27)
advcl:as(selects-23, possible-28)
nsubj(want-30, they-29)
ccomp(selects-23, want-30)
mark(checking-32, by-31)
advcl:by(want-30, checking-32)
det(box-34, the-33)
dobj(checking-32, box-34)
punct(selects-23, .-35)
","root(ROOT-0, selects-23)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(set-6, user-3)
advcl:if(clicks-16, wants-4)
mark(set-6, to-5)
xcomp(wants-4, set-6)
det(alert-8, the-7)
dobj(set-6, alert-8)
case(appliance-12, for-9)
det(appliance-12, a-10)
amod(appliance-12, specific-11)
nmod:for(alert-8, appliance-12)
advmod(clicks-16, Then-13)
det(User-15, the-14)
nsubj(clicks-16, User-15)
ccomp(selects-23, clicks-16)
case(appliance-19, on-17)
det(appliance-19, that-18)
nmod:on(clicks-16, appliance-19)
punct(selects-23, ,-20)
advmod(User-22, Else-21)
nsubj(selects-23, User-22)
case(appliances-26, as-24)
amod(appliances-26, many-25)
nmod:as(selects-23, appliances-26)
case(possible-28, as-27)
advcl:as(selects-23, possible-28)
nsubj(want-30, they-29)
ccomp(selects-23, want-30)
mark(checking-32, by-31)
advcl:by(want-30, checking-32)
det(box-34, the-33)
dobj(checking-32, box-34)
punct(selects-23, .-35)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=User clicks on Actions drop down tab. CharacterOffsetBegin=294 CharacterOffsetEnd=331 Tokens=[User-1, clicks-2, on-3, Actions-4, drop-5, down-6, tab-7, .-8] SentenceIndex=3 TokenBegin=57 TokenEnd=65 Mentions=[] CollapsedDependencies=-> clicks/VBZ (root)
  -> User/NN (nsubj)
  -> Actions/NNS (nmod:on)
    -> on/IN (case)
    -> drop/VBP (dep)
      -> down/RP (compound:prt)
      -> tab/NN (dobj)
  -> ./. (punct)
 BasicDependencies=-> clicks/VBZ (root)
  -> User/NN (nsubj)
  -> Actions/NNS (nmod)
    -> on/IN (case)
    -> drop/VBP (dep)
      -> down/RP (compound:prt)
      -> tab/NN (dobj)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> clicks/VBZ (root)
  -> User/NN (nsubj)
  -> Actions/NNS (nmod:on)
    -> on/IN (case)
    -> drop/VBP (dep)
      -> down/RP (compound:prt)
      -> tab/NN (dobj)
  -> ./. (punct)
 EnhancedDependencies=-> clicks/VBZ (root)
  -> User/NN (nsubj)
  -> Actions/NNS (nmod:on)
    -> on/IN (case)
    -> drop/VBP (dep)
      -> down/RP (compound:prt)
      -> tab/NN (dobj)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> clicks/VBZ (root)
  -> User/NN (nsubj)
  -> Actions/NNS (nmod:on)
    -> on/IN (case)
    -> drop/VBP (dep)
      -> down/RP (compound:prt)
      -> tab/NN (dobj)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (NP (NN User)) (VP (VBZ clicks) (PP (IN on) (NP (NP (NNS Actions)) (VP (VBP drop) (PRT (RP down)) (NP (NN tab)))))) (. .))) BinarizedTree=(ROOT (S (NP (NN User)) (@S (VP (VBZ clicks) (PP (IN on) (NP (NP (NNS Actions)) (VP (@VP (VBP drop) (PRT (RP down))) (NP (NN tab)))))) (. .)))) CorefMentions=[User, Actions, tab] AlternativeDependencies=-> clicks/VBZ (root)
  -> User/NN (nsubj)
  -> Actions/NNS (prep_on)
    -> drop/VBP (dep)
      -> down/RP (prt)
      -> tab/NN (dobj)
 SentimentAnnotatedTree=(ROOT (NP User) (@S (VP (VBZ clicks) (PP (IN on) (NP (NP Actions) (VP (@VP (VBP drop) (PRT down)) (NP tab))))) (. .))) SentimentClass=Negative]","root(ROOT-0, clicks-2)
nsubj(clicks-2, User-1)
case(Actions-4, on-3)
nmod(clicks-2, Actions-4)
dep(Actions-4, drop-5)
compound:prt(drop-5, down-6)
dobj(drop-5, tab-7)
punct(clicks-2, .-8)
","root(ROOT-0, clicks-2)
nsubj(clicks-2, User-1)
case(Actions-4, on-3)
nmod:on(clicks-2, Actions-4)
dep(Actions-4, drop-5)
compound:prt(drop-5, down-6)
dobj(drop-5, tab-7)
punct(clicks-2, .-8)
","root(ROOT-0, clicks-2)
nsubj(clicks-2, User-1)
case(Actions-4, on-3)
nmod:on(clicks-2, Actions-4)
dep(Actions-4, drop-5)
compound:prt(drop-5, down-6)
dobj(drop-5, tab-7)
punct(clicks-2, .-8)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=User selects Manage_Alerts. CharacterOffsetBegin=332 CharacterOffsetEnd=359 Tokens=[User-1, selects-2, Manage_Alerts-3, .-4] SentenceIndex=4 TokenBegin=65 TokenEnd=69 Mentions=[] CollapsedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 BasicDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 EnhancedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (NP (NN User)) (VP (VBZ selects) (NP (NNS Manage_Alerts))) (. .))) BinarizedTree=(ROOT (S (NP (NN User)) (@S (VP (VBZ selects) (NP (NNS Manage_Alerts))) (. .)))) CorefMentions=[User, Manage_Alerts] AlternativeDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
 SentimentAnnotatedTree=(ROOT (NP User) (@S (VP (VBZ selects) (NP Manage_Alerts)) (. .))) SentimentClass=Neutral]","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
dobj(selects-2, Manage_Alerts-3)
punct(selects-2, .-4)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
dobj(selects-2, Manage_Alerts-3)
punct(selects-2, .-4)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
dobj(selects-2, Manage_Alerts-3)
punct(selects-2, .-4)
","Neutral"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. CharacterOffsetBegin=360 CharacterOffsetEnd=479 Tokens=[If-1, the-2, user-3, wants-4, to-5, turn-6, on-7, the-8, alert-9, Then-10, select-11, the-12, Turn-13, On-14, the-15, Radio-16, button-17, ,-18, Else-19, select-20, the-21, Turn-Off-22, radio-23, button-24, .-25] SentenceIndex=5 TokenBegin=69 TokenEnd=94 Mentions=[Turn-Off] CollapsedDependencies=-> wants/VBZ (root)
  -> If/IN (mark)
  -> user/NN (nsubj)
    -> the/DT (det)
  -> turn/VB (xcomp)
    -> to/TO (mark)
    -> on/RP (compound:prt)
    -> button/NN (dobj)
      -> the/DT (det)
      -> alert/JJ (amod)
        -> Then/RB (advmod)
      -> select/JJ (amod)
      -> Turn/NN (dep)
        -> the/DT (det)
        -> button/NN (nmod:on)
          -> On/IN (case)
          -> the/DT (det)
          -> Radio/NNP (compound)
          -> ,/, (punct)
          -> Else/RB (advmod)
          -> Turn-Off/NN (dep)
            -> select/JJ (amod)
            -> the/DT (det)
      -> radio/NN (compound)
  -> ./. (punct)
 BasicDependencies=-> wants/VBZ (root)
  -> If/IN (mark)
  -> user/NN (nsubj)
    -> the/DT (det)
  -> turn/VB (xcomp)
    -> to/TO (mark)
    -> on/RP (compound:prt)
    -> button/NN (dobj)
      -> the/DT (det)
      -> alert/JJ (amod)
        -> Then/RB (advmod)
      -> select/JJ (amod)
      -> Turn/NN (dep)
        -> the/DT (det)
        -> button/NN (nmod)
          -> On/IN (case)
          -> the/DT (det)
          -> Radio/NNP (compound)
          -> ,/, (punct)
          -> Else/RB (advmod)
          -> Turn-Off/NN (dep)
            -> select/JJ (amod)
            -> the/DT (det)
      -> radio/NN (compound)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> wants/VBZ (root)
  -> If/IN (mark)
  -> user/NN (nsubj)
    -> the/DT (det)
  -> turn/VB (xcomp)
    -> to/TO (mark)
    -> on/RP (compound:prt)
    -> button/NN (dobj)
      -> the/DT (det)
      -> alert/JJ (amod)
        -> Then/RB (advmod)
      -> select/JJ (amod)
      -> Turn/NN (dep)
        -> the/DT (det)
        -> button/NN (nmod:on)
          -> On/IN (case)
          -> the/DT (det)
          -> Radio/NNP (compound)
          -> ,/, (punct)
          -> Else/RB (advmod)
          -> Turn-Off/NN (dep)
            -> select/JJ (amod)
            -> the/DT (det)
      -> radio/NN (compound)
  -> ./. (punct)
 EnhancedDependencies=-> wants/VBZ (root)
  -> If/IN (mark)
  -> user/NN (nsubj)
    -> the/DT (det)
  -> turn/VB (xcomp)
    -> user/NN (nsubj:xsubj)
    -> to/TO (mark)
    -> on/RP (compound:prt)
    -> button/NN (dobj)
      -> the/DT (det)
      -> alert/JJ (amod)
        -> Then/RB (advmod)
      -> select/JJ (amod)
      -> Turn/NN (dep)
        -> the/DT (det)
        -> button/NN (nmod:on)
          -> On/IN (case)
          -> the/DT (det)
          -> Radio/NNP (compound)
          -> ,/, (punct)
          -> Else/RB (advmod)
          -> Turn-Off/NN (dep)
            -> select/JJ (amod)
            -> the/DT (det)
      -> radio/NN (compound)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> wants/VBZ (root)
  -> If/IN (mark)
  -> user/NN (nsubj)
    -> the/DT (det)
  -> turn/VB (xcomp)
    -> user/NN (nsubj:xsubj)
    -> to/TO (mark)
    -> on/RP (compound:prt)
    -> button/NN (dobj)
      -> the/DT (det)
      -> alert/JJ (amod)
        -> Then/RB (advmod)
      -> select/JJ (amod)
      -> Turn/NN (dep)
        -> the/DT (det)
        -> button/NN (nmod:on)
          -> On/IN (case)
          -> the/DT (det)
          -> Radio/NNP (compound)
          -> ,/, (punct)
          -> Else/RB (advmod)
          -> Turn-Off/NN (dep)
            -> select/JJ (amod)
            -> the/DT (det)
      -> radio/NN (compound)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (FRAG (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (VB turn) (PRT (RP on)) (NP (DT the) (ADJP (JJ alert) (ADVP (RB Then))) (JJ select) (NAC (NP (DT the) (NN Turn)) (PP (IN On) (NP (NP (DT the) (NNP Radio) (NN button)) (, ,) (RB Else) (NP (JJ select) (DT the) (NN Turn-Off))))) (NN radio) (NN button)))))))) (. .))) BinarizedTree=(ROOT (FRAG (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (@VP (VB turn) (PRT (RP on))) (NP (DT the) (@NP (ADJP (JJ alert) (ADVP (RB Then))) (@NP (JJ select) (@NP (NAC (NP (DT the) (NN Turn)) (PP (IN On) (NP (@NP (@NP (NP (DT the) (@NP (NNP Radio) (NN button))) (, ,)) (RB Else)) (NP (JJ select) (@NP (DT the) (NN Turn-Off)))))) (@NP (NN radio) (NN button)))))))))))) (. .))) CorefMentions=[the user, the Turn On the Radio button , Else select the Turn-Off, the Radio button , Else, select the Turn-Off, the alert Then select the Turn On the Radio button , Else select the Turn-Off radio button] AlternativeDependencies=-> wants/VBZ (root)
  -> If/IN (mark)
  -> user/NN (nsubj)
    -> the/DT (det)
  -> turn/VB (xcomp)
    -> to/TO (aux)
    -> on/RP (prt)
    -> button/NN (dobj)
      -> the/DT (det)
      -> alert/JJ (amod)
        -> Then/RB (advmod)
      -> select/JJ (amod)
      -> Turn/NN (dep)
        -> the/DT (det)
        -> button/NN (prep_on)
          -> the/DT (det)
          -> Radio/NNP (nn)
          -> Else/RB (advmod)
          -> Turn-Off/NN (dep)
            -> select/JJ (amod)
            -> the/DT (det)
      -> radio/NN (nn)
 SentimentAnnotatedTree=(ROOT (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (TO to) (VP (@VP (VB turn) (PRT on)) (NP (DT the) (@NP (ADJP (JJ alert) (ADVP Then)) (@NP (JJ select) (@NP (NAC (NP (DT the) (NN Turn)) (PP (IN On) (NP (@NP (@NP (NP (DT the) (@NP (NNP Radio) (NN button))) (, ,)) (RB Else)) (NP (JJ select) (@NP (DT the) (NN Turn-Off)))))) (@NP (NN radio) (NN button))))))))))) (. .)) SentimentClass=Neutral]","root(ROOT-0, wants-4)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
mark(turn-6, to-5)
xcomp(wants-4, turn-6)
compound:prt(turn-6, on-7)
det(button-24, the-8)
amod(button-24, alert-9)
advmod(alert-9, Then-10)
amod(button-24, select-11)
det(Turn-13, the-12)
dep(button-24, Turn-13)
case(button-17, On-14)
det(button-17, the-15)
compound(button-17, Radio-16)
nmod(Turn-13, button-17)
punct(button-17, ,-18)
advmod(button-17, Else-19)
amod(Turn-Off-22, select-20)
det(Turn-Off-22, the-21)
dep(button-17, Turn-Off-22)
compound(button-24, radio-23)
dobj(turn-6, button-24)
punct(wants-4, .-25)
","root(ROOT-0, wants-4)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(turn-6, user-3)
mark(turn-6, to-5)
xcomp(wants-4, turn-6)
compound:prt(turn-6, on-7)
det(button-24, the-8)
amod(button-24, alert-9)
advmod(alert-9, Then-10)
amod(button-24, select-11)
det(Turn-13, the-12)
dep(button-24, Turn-13)
case(button-17, On-14)
det(button-17, the-15)
compound(button-17, Radio-16)
nmod:on(Turn-13, button-17)
punct(button-17, ,-18)
advmod(button-17, Else-19)
amod(Turn-Off-22, select-20)
det(Turn-Off-22, the-21)
dep(button-17, Turn-Off-22)
compound(button-24, radio-23)
dobj(turn-6, button-24)
punct(wants-4, .-25)
","root(ROOT-0, wants-4)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(turn-6, user-3)
mark(turn-6, to-5)
xcomp(wants-4, turn-6)
compound:prt(turn-6, on-7)
det(button-24, the-8)
amod(button-24, alert-9)
advmod(alert-9, Then-10)
amod(button-24, select-11)
det(Turn-13, the-12)
dep(button-24, Turn-13)
case(button-17, On-14)
det(button-17, the-15)
compound(button-17, Radio-16)
nmod:on(Turn-13, button-17)
punct(button-17, ,-18)
advmod(button-17, Else-19)
amod(Turn-Off-22, select-20)
det(Turn-Off-22, the-21)
dep(button-17, Turn-Off-22)
compound(button-24, radio-23)
dobj(turn-6, button-24)
punct(wants-4, .-25)
","Neutral"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=The User selects the number through the dropdown mentioned below. CharacterOffsetBegin=480 CharacterOffsetEnd=545 Tokens=[The-1, User-2, selects-3, the-4, number-5, through-6, the-7, dropdown-8, mentioned-9, below-10, .-11] SentenceIndex=6 TokenBegin=94 TokenEnd=105 Mentions=[] CollapsedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod:through)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 BasicDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod:through)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 EnhancedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod:through)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod:through)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (NP (DT The) (NN User)) (VP (VBZ selects) (NP (DT the) (NN number)) (PP (IN through) (NP (NP (DT the) (NN dropdown)) (VP (VBN mentioned) (PP (IN below)))))) (. .))) BinarizedTree=(ROOT (S (NP (DT The) (NN User)) (@S (VP (@VP (VBZ selects) (NP (DT the) (NN number))) (PP (IN through) (NP (NP (DT the) (NN dropdown)) (VP (VBN mentioned) (PP (IN below)))))) (. .)))) CorefMentions=[The User, the number, the dropdown mentioned below] AlternativeDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (prep_through)
    -> the/DT (det)
    -> mentioned/VBN (vmod)
      -> below/IN (prep)
 SentimentAnnotatedTree=(ROOT (NP (DT The) (NN User)) (@S (VP (@VP (VBZ selects) (NP (DT the) (NN number))) (PP (IN through) (NP (NP (DT the) (NN dropdown)) (VP (VBN mentioned) (PP below))))) (. .))) SentimentClass=Negative]","root(ROOT-0, selects-3)
det(User-2, The-1)
nsubj(selects-3, User-2)
det(number-5, the-4)
dobj(selects-3, number-5)
case(dropdown-8, through-6)
det(dropdown-8, the-7)
nmod(selects-3, dropdown-8)
acl(dropdown-8, mentioned-9)
nmod(mentioned-9, below-10)
punct(selects-3, .-11)
","root(ROOT-0, selects-3)
det(User-2, The-1)
nsubj(selects-3, User-2)
det(number-5, the-4)
dobj(selects-3, number-5)
case(dropdown-8, through-6)
det(dropdown-8, the-7)
nmod:through(selects-3, dropdown-8)
acl(dropdown-8, mentioned-9)
nmod(mentioned-9, below-10)
punct(selects-3, .-11)
","root(ROOT-0, selects-3)
det(User-2, The-1)
nsubj(selects-3, User-2)
det(number-5, the-4)
dobj(selects-3, number-5)
case(dropdown-8, through-6)
det(dropdown-8, the-7)
nmod:through(selects-3, dropdown-8)
acl(dropdown-8, mentioned-9)
nmod(mentioned-9, below-10)
punct(selects-3, .-11)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=User selects the parameter days/hours through the next drop-down menu. CharacterOffsetBegin=546 CharacterOffsetEnd=616 Tokens=[User-1, selects-2, the-3, parameter-4, days/hours-5, through-6, the-7, next-8, drop-down-9, menu-10, .-11] SentenceIndex=7 TokenBegin=105 TokenEnd=116 Mentions=[] CollapsedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod:through)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 BasicDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod:through)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 EnhancedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod:through)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod:through)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (NP (NN User)) (VP (VBZ selects) (SBAR (S (NP (DT the) (NN parameter)) (VP (VBZ days/hours) (PP (IN through) (NP (DT the) (JJ next) (JJ drop-down) (NN menu))))))) (. .))) BinarizedTree=(ROOT (S (NP (NN User)) (@S (VP (VBZ selects) (SBAR (S (NP (DT the) (NN parameter)) (VP (VBZ days/hours) (PP (IN through) (NP (DT the) (@NP (JJ next) (@NP (JJ drop-down) (NN menu))))))))) (. .)))) CorefMentions=[the next drop-down menu, User, the parameter] AlternativeDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (prep_through)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
 SentimentAnnotatedTree=(ROOT (NP User) (@S (VP (VBZ selects) (SBAR (NP (DT the) (NN parameter)) (VP (VBZ days/hours) (PP (IN through) (NP (DT the) (@NP (JJ next) (@NP (JJ drop-down) (NN menu)))))))) (. .))) SentimentClass=Negative]","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
det(parameter-4, the-3)
nsubj(days/hours-5, parameter-4)
ccomp(selects-2, days/hours-5)
case(menu-10, through-6)
det(menu-10, the-7)
amod(menu-10, next-8)
amod(menu-10, drop-down-9)
nmod(days/hours-5, menu-10)
punct(selects-2, .-11)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
det(parameter-4, the-3)
nsubj(days/hours-5, parameter-4)
ccomp(selects-2, days/hours-5)
case(menu-10, through-6)
det(menu-10, the-7)
amod(menu-10, next-8)
amod(menu-10, drop-down-9)
nmod:through(days/hours-5, menu-10)
punct(selects-2, .-11)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
det(parameter-4, the-3)
nsubj(days/hours-5, parameter-4)
ccomp(selects-2, days/hours-5)
case(menu-10, through-6)
det(menu-10, the-7)
amod(menu-10, next-8)
amod(menu-10, drop-down-9)
nmod:through(days/hours-5, menu-10)
punct(selects-2, .-11)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. CharacterOffsetBegin=617 CharacterOffsetEnd=748 Tokens=[If-1, the-2, user-3, wants-4, to-5, save-6, the-7, changes-8, Then-9, click-10, on-11, the-12, Save-13, button-14, Else-15, click-16, on-17, the-18, cancel-19, button-20, to-21, not-22, update-23, the-24, changes-25, made-26, .-27] SentenceIndex=8 TokenBegin=116 TokenEnd=143 Mentions=[] CollapsedDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod:on)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 BasicDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod:on)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 EnhancedDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> user/NN (nsubj:xsubj)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod:on)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl:to)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> user/NN (nsubj:xsubj)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod:on)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl:to)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (VB save) (SBAR (S (NP (DT the) (NNS changes)) (ADVP (RB Then)) (VP (VBP click) (PP (IN on) (NP (DT the) (NNP Save) (NN button) (RB Else)))))))))))) (VP (VBP click) (ADVP (IN on) (DT the)) (VP (VB cancel) (NP (NN button)) (S (VP (TO to) (VP (RB not) (VB update) (S (NP (DT the) (NNS changes)) (VP (VBN made)))))))) (. .))) BinarizedTree=(ROOT (S (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (VB save) (SBAR (S (NP (DT the) (NNS changes)) (@S (ADVP (RB Then)) (VP (VBP click) (PP (IN on) (NP (DT the) (@NP (NNP Save) (@NP (NN button) (RB Else))))))))))))))) (@S (VP (@VP (VBP click) (ADVP (IN on) (DT the))) (VP (@VP (VB cancel) (NP (NN button))) (S (VP (TO to) (VP (RB not) (@VP (VB update) (S (NP (DT the) (NNS changes)) (VP (VBN made))))))))) (. .)))) CorefMentions=[the changes, the user, the changes, the Save button Else, the, button] AlternativeDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> to/TO (aux)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (prep_on)
          -> the/DT (det)
          -> Save/NNP (nn)
          -> Else/RB (advmod)
  -> on/IN (advmod)
    -> the/DT (dep)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (vmod)
      -> to/TO (aux)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
 SentimentAnnotatedTree=(ROOT (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (TO to) (VP (VB save) (SBAR (NP (DT the) (NNS changes)) (@S (ADVP Then) (VP (VBP click) (PP (IN on) (NP (DT the) (@NP (NNP Save) (@NP (NN button) (RB Else))))))))))))) (@S (VP (@VP (VBP click) (ADVP (IN on) (DT the))) (VP (@VP (VB cancel) (NP button)) (S (TO to) (VP (RB not) (@VP (VB update) (S (NP (DT the) (NNS changes)) (VP made))))))) (. .))) SentimentClass=Negative]","root(ROOT-0, click-16)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
csubj(click-16, wants-4)
mark(save-6, to-5)
xcomp(wants-4, save-6)
det(changes-8, the-7)
nsubj(click-10, changes-8)
advmod(click-10, Then-9)
ccomp(save-6, click-10)
case(button-14, on-11)
det(button-14, the-12)
compound(button-14, Save-13)
nmod(click-10, button-14)
advmod(button-14, Else-15)
case(the-18, on-17)
advmod(click-16, the-18)
dep(click-16, cancel-19)
dobj(cancel-19, button-20)
mark(update-23, to-21)
neg(update-23, not-22)
advcl(cancel-19, update-23)
det(changes-25, the-24)
nsubj(made-26, changes-25)
dep(update-23, made-26)
punct(click-16, .-27)
","root(ROOT-0, click-16)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(save-6, user-3)
csubj(click-16, wants-4)
mark(save-6, to-5)
xcomp(wants-4, save-6)
det(changes-8, the-7)
nsubj(click-10, changes-8)
advmod(click-10, Then-9)
ccomp(save-6, click-10)
case(button-14, on-11)
det(button-14, the-12)
compound(button-14, Save-13)
nmod:on(click-10, button-14)
advmod(button-14, Else-15)
case(the-18, on-17)
advmod(click-16, the-18)
dep(click-16, cancel-19)
dobj(cancel-19, button-20)
mark(update-23, to-21)
neg(update-23, not-22)
advcl:to(cancel-19, update-23)
det(changes-25, the-24)
nsubj(made-26, changes-25)
dep(update-23, made-26)
punct(click-16, .-27)
","root(ROOT-0, click-16)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(save-6, user-3)
csubj(click-16, wants-4)
mark(save-6, to-5)
xcomp(wants-4, save-6)
det(changes-8, the-7)
nsubj(click-10, changes-8)
advmod(click-10, Then-9)
ccomp(save-6, click-10)
case(button-14, on-11)
det(button-14, the-12)
compound(button-14, Save-13)
nmod:on(click-10, button-14)
advmod(button-14, Else-15)
case(the-18, on-17)
advmod(click-16, the-18)
dep(click-16, cancel-19)
dobj(cancel-19, button-20)
mark(update-23, to-21)
neg(update-23, not-22)
advcl:to(cancel-19, update-23)
det(changes-25, the-24)
nsubj(made-26, changes-25)
dep(update-23, made-26)
punct(click-16, .-27)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. CharacterOffsetBegin=749 CharacterOffsetEnd=902 Tokens=[If-1, User-2, selects-3, as-4, many-5, appliances-6, as-7, possible-8, they-9, want-10, by-11, checking-12, the-13, box-14, Then-15, Click-16, on-17, three-dot-18, to-19, extend-20, the-21, dropdown-22, ,-23, Else-24, click-25, on-26, one-27, appliance-28, .-29] SentenceIndex=9 TokenBegin=143 TokenEnd=172 Mentions=[one] CollapsedDependencies=-> click/VBP (root)
  -> selects/VBZ (advcl)
    -> If/IN (mark)
    -> User/NN (nsubj)
    -> appliances/NNS (nmod:as)
      -> as/IN (case)
      -> many/JJ (amod)
    -> possible/JJ (advcl)
      -> as/IN (case)
  -> want/VBP (parataxis)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl)
      -> by/IN (mark)
      -> Click/VB (ccomp)
        -> box/NN (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> three-dot/JJ (nmod:on)
          -> on/IN (case)
        -> extend/VB (xcomp)
          -> to/TO (mark)
          -> dropdown/NN (dobj)
            -> the/DT (det)
    -> ,/, (punct)
  -> Else/RB (advmod)
  -> appliance/NN (nmod:on)
    -> on/IN (case)
    -> one/CD (nummod)
  -> ./. (punct)
 BasicDependencies=-> click/VBP (root)
  -> selects/VBZ (advcl)
    -> If/IN (mark)
    -> User/NN (nsubj)
    -> appliances/NNS (nmod)
      -> as/IN (case)
      -> many/JJ (amod)
    -> possible/JJ (advcl)
      -> as/IN (case)
  -> want/VBP (parataxis)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl)
      -> by/IN (mark)
      -> Click/VB (ccomp)
        -> box/NN (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> three-dot/JJ (nmod)
          -> on/IN (case)
        -> extend/VB (xcomp)
          -> to/TO (mark)
          -> dropdown/NN (dobj)
            -> the/DT (det)
    -> ,/, (punct)
  -> Else/RB (advmod)
  -> appliance/NN (nmod)
    -> on/IN (case)
    -> one/CD (nummod)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> click/VBP (root)
  -> selects/VBZ (advcl)
    -> If/IN (mark)
    -> User/NN (nsubj)
    -> appliances/NNS (nmod:as)
      -> as/IN (case)
      -> many/JJ (amod)
    -> possible/JJ (advcl)
      -> as/IN (case)
  -> want/VBP (parataxis)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl)
      -> by/IN (mark)
      -> Click/VB (ccomp)
        -> box/NN (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> three-dot/JJ (nmod:on)
          -> on/IN (case)
        -> extend/VB (xcomp)
          -> to/TO (mark)
          -> dropdown/NN (dobj)
            -> the/DT (det)
    -> ,/, (punct)
  -> Else/RB (advmod)
  -> appliance/NN (nmod:on)
    -> on/IN (case)
    -> one/CD (nummod)
  -> ./. (punct)
 EnhancedDependencies=-> click/VBP (root)
  -> selects/VBZ (advcl:if)
    -> If/IN (mark)
    -> User/NN (nsubj)
    -> appliances/NNS (nmod:as)
      -> as/IN (case)
      -> many/JJ (amod)
    -> possible/JJ (advcl:as)
      -> as/IN (case)
  -> want/VBP (parataxis)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl:by)
      -> by/IN (mark)
      -> Click/VB (ccomp)
        -> box/NN (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> three-dot/JJ (nmod:on)
          -> on/IN (case)
        -> extend/VB (xcomp)
          -> box/NN (nsubj:xsubj)
          -> to/TO (mark)
          -> dropdown/NN (dobj)
            -> the/DT (det)
    -> ,/, (punct)
  -> Else/RB (advmod)
  -> appliance/NN (nmod:on)
    -> on/IN (case)
    -> one/CD (nummod)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> click/VBP (root)
  -> selects/VBZ (advcl:if)
    -> If/IN (mark)
    -> User/NN (nsubj)
    -> appliances/NNS (nmod:as)
      -> as/IN (case)
      -> many/JJ (amod)
    -> possible/JJ (advcl:as)
      -> as/IN (case)
  -> want/VBP (parataxis)
    -> they/PRP (nsubj)
    -> checking/VBG (advcl:by)
      -> by/IN (mark)
      -> Click/VB (ccomp)
        -> box/NN (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> three-dot/JJ (nmod:on)
          -> on/IN (case)
        -> extend/VB (xcomp)
          -> box/NN (nsubj:xsubj)
          -> to/TO (mark)
          -> dropdown/NN (dobj)
            -> the/DT (det)
    -> ,/, (punct)
  -> Else/RB (advmod)
  -> appliance/NN (nmod:on)
    -> on/IN (case)
    -> one/CD (nummod)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (SBAR (IN If) (S (NP (NN User)) (VP (VBZ selects) (PP (IN as) (NP (JJ many) (NNS appliances))) (PP (IN as) (ADJP (JJ possible)))))) (PRN (S (NP (PRP they)) (VP (VBP want) (PP (IN by) (S (VP (VBG checking) (S (NP (DT the) (NN box)) (RB Then) (VP (VB Click) (PP (IN on) (NP (JJ three-dot))) (S (VP (TO to) (VP (VB extend) (NP (DT the) (NN dropdown)))))))))))) (, ,)) (ADVP (RB Else)) (VP (VBP click) (PP (IN on) (NP (CD one) (NN appliance)))) (. .))) BinarizedTree=(ROOT (S (SBAR (IN If) (S (NP (NN User)) (VP (@VP (VBZ selects) (PP (IN as) (NP (JJ many) (NNS appliances)))) (PP (IN as) (ADJP (JJ possible)))))) (@S (PRN (S (NP (PRP they)) (VP (VBP want) (PP (IN by) (S (VP (VBG checking) (S (NP (DT the) (NN box)) (@S (RB Then) (VP (@VP (VB Click) (PP (IN on) (NP (JJ three-dot)))) (S (VP (TO to) (VP (VB extend) (NP (DT the) (NN dropdown))))))))))))) (, ,)) (@S (ADVP (RB Else)) (@S (VP (VBP click) (PP (IN on) (NP (CD one) (NN appliance)))) (. .)))))) CorefMentions=[one, User, many appliances, they, the box, the dropdown, one appliance] AlternativeDependencies=-> click/VBP (root)
  -> selects/VBZ (advcl)
    -> If/IN (mark)
    -> User/NN (nsubj)
    -> appliances/NNS (prep_as)
      -> many/JJ (amod)
    -> possible/JJ (prep_as)
  -> want/VBP (parataxis)
    -> they/PRP (nsubj)
    -> checking/VBG (prepc_by)
      -> Click/VB (ccomp)
        -> box/NN (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> three-dot/JJ (prep_on)
        -> extend/VB (xcomp)
          -> to/TO (aux)
          -> dropdown/NN (dobj)
            -> the/DT (det)
  -> Else/RB (advmod)
  -> appliance/NN (prep_on)
    -> one/CD (num)
 SentimentAnnotatedTree=(ROOT (SBAR (IN If) (S (NP User) (VP (@VP (VBZ selects) (PP (IN as) (NP (JJ many) (NNS appliances)))) (PP (IN as) (ADJP possible))))) (@S (PRN (S (NP they) (VP (VBP want) (PP (IN by) (S (VBG checking) (S (NP (DT the) (NN box)) (@S (RB Then) (VP (@VP (VB Click) (PP (IN on) (NP three-dot))) (S (TO to) (VP (VB extend) (NP (DT the) (NN dropdown))))))))))) (, ,)) (@S (ADVP Else) (@S (VP (VBP click) (PP (IN on) (NP (CD one) (NN appliance)))) (. .))))) SentimentClass=Negative]","root(ROOT-0, click-25)
mark(selects-3, If-1)
nsubj(selects-3, User-2)
advcl(click-25, selects-3)
case(appliances-6, as-4)
amod(appliances-6, many-5)
nmod(selects-3, appliances-6)
case(possible-8, as-7)
advcl(selects-3, possible-8)
nsubj(want-10, they-9)
parataxis(click-25, want-10)
mark(checking-12, by-11)
advcl(want-10, checking-12)
det(box-14, the-13)
nsubj(Click-16, box-14)
advmod(Click-16, Then-15)
ccomp(checking-12, Click-16)
case(three-dot-18, on-17)
nmod(Click-16, three-dot-18)
mark(extend-20, to-19)
xcomp(Click-16, extend-20)
det(dropdown-22, the-21)
dobj(extend-20, dropdown-22)
punct(want-10, ,-23)
advmod(click-25, Else-24)
case(appliance-28, on-26)
nummod(appliance-28, one-27)
nmod(click-25, appliance-28)
punct(click-25, .-29)
","root(ROOT-0, click-25)
mark(selects-3, If-1)
nsubj(selects-3, User-2)
advcl:if(click-25, selects-3)
case(appliances-6, as-4)
amod(appliances-6, many-5)
nmod:as(selects-3, appliances-6)
case(possible-8, as-7)
advcl:as(selects-3, possible-8)
nsubj(want-10, they-9)
parataxis(click-25, want-10)
mark(checking-12, by-11)
advcl:by(want-10, checking-12)
det(box-14, the-13)
nsubj(Click-16, box-14)
nsubj:xsubj(extend-20, box-14)
advmod(Click-16, Then-15)
ccomp(checking-12, Click-16)
case(three-dot-18, on-17)
nmod:on(Click-16, three-dot-18)
mark(extend-20, to-19)
xcomp(Click-16, extend-20)
det(dropdown-22, the-21)
dobj(extend-20, dropdown-22)
punct(want-10, ,-23)
advmod(click-25, Else-24)
case(appliance-28, on-26)
nummod(appliance-28, one-27)
nmod:on(click-25, appliance-28)
punct(click-25, .-29)
","root(ROOT-0, click-25)
mark(selects-3, If-1)
nsubj(selects-3, User-2)
advcl:if(click-25, selects-3)
case(appliances-6, as-4)
amod(appliances-6, many-5)
nmod:as(selects-3, appliances-6)
case(possible-8, as-7)
advcl:as(selects-3, possible-8)
nsubj(want-10, they-9)
parataxis(click-25, want-10)
mark(checking-12, by-11)
advcl:by(want-10, checking-12)
det(box-14, the-13)
nsubj(Click-16, box-14)
nsubj:xsubj(extend-20, box-14)
advmod(Click-16, Then-15)
ccomp(checking-12, Click-16)
case(three-dot-18, on-17)
nmod:on(Click-16, three-dot-18)
mark(extend-20, to-19)
xcomp(Click-16, extend-20)
det(dropdown-22, the-21)
dobj(extend-20, dropdown-22)
punct(want-10, ,-23)
advmod(click-25, Else-24)
case(appliance-28, on-26)
nummod(appliance-28, one-27)
nmod:on(click-25, appliance-28)
punct(click-25, .-29)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=User selects Manage_Alerts. CharacterOffsetBegin=903 CharacterOffsetEnd=930 Tokens=[User-1, selects-2, Manage_Alerts-3, .-4] SentenceIndex=10 TokenBegin=172 TokenEnd=176 Mentions=[] CollapsedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 BasicDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 EnhancedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (NP (NN User)) (VP (VBZ selects) (NP (NNS Manage_Alerts))) (. .))) BinarizedTree=(ROOT (S (NP (NN User)) (@S (VP (VBZ selects) (NP (NNS Manage_Alerts))) (. .)))) CorefMentions=[User, Manage_Alerts] AlternativeDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> Manage_Alerts/NNS (dobj)
 SentimentAnnotatedTree=(ROOT (NP User) (@S (VP (VBZ selects) (NP Manage_Alerts)) (. .))) SentimentClass=Neutral]","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
dobj(selects-2, Manage_Alerts-3)
punct(selects-2, .-4)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
dobj(selects-2, Manage_Alerts-3)
punct(selects-2, .-4)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
dobj(selects-2, Manage_Alerts-3)
punct(selects-2, .-4)
","Neutral"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. CharacterOffsetBegin=931 CharacterOffsetEnd=1046 Tokens=[If-1, the-2, user-3, wants-4, to-5, turn-6, On-7, the-8, alert-9, ,-10, Then-11, select-12, the-13, Turn-14, On-15, Radio-16, button-17, Else-18, select-19, the-20, Turn-Off-21, radio-22, button-23, .-24] SentenceIndex=11 TokenBegin=176 TokenEnd=200 Mentions=[Turn On Radio, Turn-Off] CollapsedDependencies=-> select/VBP (root)
  -> wants/VBZ (advcl)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> turn/VB (xcomp)
      -> to/TO (mark)
      -> alert/JJ (nmod:on)
        -> On/IN (case)
        -> the/DT (det)
  -> ,/, (punct)
  -> Turn/NN (nmod:on)
    -> Then/RB (advmod)
    -> select/JJ (amod)
    -> the/DT (det)
    -> On/IN (case)
    -> Radio/NN (dep)
  -> button/NN (nsubj)
    -> Else/RB (advmod)
  -> button/NN (dobj)
    -> the/DT (det)
    -> Turn-Off/NN (compound)
    -> radio/NN (compound)
  -> ./. (punct)
 BasicDependencies=-> select/VBP (root)
  -> wants/VBZ (advcl)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> turn/VB (xcomp)
      -> to/TO (mark)
      -> alert/JJ (nmod)
        -> On/IN (case)
        -> the/DT (det)
  -> ,/, (punct)
  -> Turn/NN (nmod)
    -> Then/RB (advmod)
    -> select/JJ (amod)
    -> the/DT (det)
    -> On/IN (case)
    -> Radio/NN (dep)
  -> button/NN (nsubj)
    -> Else/RB (advmod)
  -> button/NN (dobj)
    -> the/DT (det)
    -> Turn-Off/NN (compound)
    -> radio/NN (compound)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> select/VBP (root)
  -> wants/VBZ (advcl)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> turn/VB (xcomp)
      -> to/TO (mark)
      -> alert/JJ (nmod:on)
        -> On/IN (case)
        -> the/DT (det)
  -> ,/, (punct)
  -> Turn/NN (nmod:on)
    -> Then/RB (advmod)
    -> select/JJ (amod)
    -> the/DT (det)
    -> On/IN (case)
    -> Radio/NN (dep)
  -> button/NN (nsubj)
    -> Else/RB (advmod)
  -> button/NN (dobj)
    -> the/DT (det)
    -> Turn-Off/NN (compound)
    -> radio/NN (compound)
  -> ./. (punct)
 EnhancedDependencies=-> select/VBP (root)
  -> wants/VBZ (advcl:if)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> turn/VB (xcomp)
      -> user/NN (nsubj:xsubj)
      -> to/TO (mark)
      -> alert/JJ (nmod:on)
        -> On/IN (case)
        -> the/DT (det)
  -> ,/, (punct)
  -> Turn/NN (nmod:on)
    -> Then/RB (advmod)
    -> select/JJ (amod)
    -> the/DT (det)
    -> On/IN (case)
    -> Radio/NN (dep)
  -> button/NN (nsubj)
    -> Else/RB (advmod)
  -> button/NN (dobj)
    -> the/DT (det)
    -> Turn-Off/NN (compound)
    -> radio/NN (compound)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> select/VBP (root)
  -> wants/VBZ (advcl:if)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> turn/VB (xcomp)
      -> user/NN (nsubj:xsubj)
      -> to/TO (mark)
      -> alert/JJ (nmod:on)
        -> On/IN (case)
        -> the/DT (det)
  -> ,/, (punct)
  -> Turn/NN (nmod:on)
    -> Then/RB (advmod)
    -> select/JJ (amod)
    -> the/DT (det)
    -> On/IN (case)
    -> Radio/NN (dep)
  -> button/NN (nsubj)
    -> Else/RB (advmod)
  -> button/NN (dobj)
    -> the/DT (det)
    -> Turn-Off/NN (compound)
    -> radio/NN (compound)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (VB turn) (PP (IN On) (NP (DT the) (JJ alert))))))))) (, ,) (ADVP (RB Then)) (PP (NP (JJ select) (DT the) (NN Turn)) (IN On) (NP (NN Radio))) (NP (NN button) (RB Else)) (VP (VBP select) (NP (DT the) (NN Turn-Off) (NN radio) (NN button))) (. .))) BinarizedTree=(ROOT (S (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (VB turn) (PP (IN On) (NP (DT the) (JJ alert))))))))) (@S (, ,) (@S (ADVP (RB Then)) (@S (PP (NP (JJ select) (@NP (DT the) (NN Turn))) (@PP (IN On) (NP (NN Radio)))) (@S (NP (NN button) (RB Else)) (@S (VP (VBP select) (NP (DT the) (@NP (NN Turn-Off) (@NP (NN radio) (NN button))))) (. .)))))))) CorefMentions=[Turn-Off, the user, Then select the Turn On, button Else, the Turn-Off radio button] AlternativeDependencies=-> select/VBP (root)
  -> wants/VBZ (advcl)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> turn/VB (xcomp)
      -> to/TO (aux)
      -> alert/JJ (prep_on)
        -> the/DT (det)
  -> Then/RB (advmod)
  -> Turn/NN (npadvmod)
    -> select/JJ (amod)
    -> the/DT (det)
  -> Radio/NN (prep_on)
  -> button/NN (nsubj)
    -> Else/RB (advmod)
  -> button/NN (dobj)
    -> the/DT (det)
    -> Turn-Off/NN (nn)
    -> radio/NN (nn)
 SentimentAnnotatedTree=(ROOT (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (TO to) (VP (VB turn) (PP (IN On) (NP (DT the) (JJ alert)))))))) (@S (, ,) (@S (ADVP Then) (@S (PP (NP (JJ select) (@NP (DT the) (NN Turn))) (@PP (IN On) (NP Radio))) (@S (NP (NN button) (RB Else)) (@S (VP (VBP select) (NP (DT the) (@NP (NN Turn-Off) (@NP (NN radio) (NN button))))) (. .))))))) SentimentClass=Negative]","root(ROOT-0, select-19)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
advcl(select-19, wants-4)
mark(turn-6, to-5)
xcomp(wants-4, turn-6)
case(alert-9, On-7)
det(alert-9, the-8)
nmod(turn-6, alert-9)
punct(select-19, ,-10)
advmod(Turn-14, Then-11)
amod(Turn-14, select-12)
det(Turn-14, the-13)
nmod(select-19, Turn-14)
case(Turn-14, On-15)
dep(Turn-14, Radio-16)
nsubj(select-19, button-17)
advmod(button-17, Else-18)
det(button-23, the-20)
compound(button-23, Turn-Off-21)
compound(button-23, radio-22)
dobj(select-19, button-23)
punct(select-19, .-24)
","root(ROOT-0, select-19)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(turn-6, user-3)
advcl:if(select-19, wants-4)
mark(turn-6, to-5)
xcomp(wants-4, turn-6)
case(alert-9, On-7)
det(alert-9, the-8)
nmod:on(turn-6, alert-9)
punct(select-19, ,-10)
advmod(Turn-14, Then-11)
amod(Turn-14, select-12)
det(Turn-14, the-13)
nmod:on(select-19, Turn-14)
case(Turn-14, On-15)
dep(Turn-14, Radio-16)
nsubj(select-19, button-17)
advmod(button-17, Else-18)
det(button-23, the-20)
compound(button-23, Turn-Off-21)
compound(button-23, radio-22)
dobj(select-19, button-23)
punct(select-19, .-24)
","root(ROOT-0, select-19)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(turn-6, user-3)
advcl:if(select-19, wants-4)
mark(turn-6, to-5)
xcomp(wants-4, turn-6)
case(alert-9, On-7)
det(alert-9, the-8)
nmod:on(turn-6, alert-9)
punct(select-19, ,-10)
advmod(Turn-14, Then-11)
amod(Turn-14, select-12)
det(Turn-14, the-13)
nmod:on(select-19, Turn-14)
case(Turn-14, On-15)
dep(Turn-14, Radio-16)
nsubj(select-19, button-17)
advmod(button-17, Else-18)
det(button-23, the-20)
compound(button-23, Turn-Off-21)
compound(button-23, radio-22)
dobj(select-19, button-23)
punct(select-19, .-24)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=The User selects the number through the dropdown mentioned below. CharacterOffsetBegin=1047 CharacterOffsetEnd=1112 Tokens=[The-1, User-2, selects-3, the-4, number-5, through-6, the-7, dropdown-8, mentioned-9, below-10, .-11] SentenceIndex=12 TokenBegin=200 TokenEnd=211 Mentions=[] CollapsedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod:through)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 BasicDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod:through)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 EnhancedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod:through)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (nmod:through)
    -> through/IN (case)
    -> the/DT (det)
    -> mentioned/VBN (acl)
      -> below/IN (nmod)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (NP (DT The) (NN User)) (VP (VBZ selects) (NP (DT the) (NN number)) (PP (IN through) (NP (NP (DT the) (NN dropdown)) (VP (VBN mentioned) (PP (IN below)))))) (. .))) BinarizedTree=(ROOT (S (NP (DT The) (NN User)) (@S (VP (@VP (VBZ selects) (NP (DT the) (NN number))) (PP (IN through) (NP (NP (DT the) (NN dropdown)) (VP (VBN mentioned) (PP (IN below)))))) (. .)))) CorefMentions=[the number, the dropdown mentioned below, The User] AlternativeDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
    -> The/DT (det)
  -> number/NN (dobj)
    -> the/DT (det)
  -> dropdown/NN (prep_through)
    -> the/DT (det)
    -> mentioned/VBN (vmod)
      -> below/IN (prep)
 SentimentAnnotatedTree=(ROOT (NP (DT The) (NN User)) (@S (VP (@VP (VBZ selects) (NP (DT the) (NN number))) (PP (IN through) (NP (NP (DT the) (NN dropdown)) (VP (VBN mentioned) (PP below))))) (. .))) SentimentClass=Negative]","root(ROOT-0, selects-3)
det(User-2, The-1)
nsubj(selects-3, User-2)
det(number-5, the-4)
dobj(selects-3, number-5)
case(dropdown-8, through-6)
det(dropdown-8, the-7)
nmod(selects-3, dropdown-8)
acl(dropdown-8, mentioned-9)
nmod(mentioned-9, below-10)
punct(selects-3, .-11)
","root(ROOT-0, selects-3)
det(User-2, The-1)
nsubj(selects-3, User-2)
det(number-5, the-4)
dobj(selects-3, number-5)
case(dropdown-8, through-6)
det(dropdown-8, the-7)
nmod:through(selects-3, dropdown-8)
acl(dropdown-8, mentioned-9)
nmod(mentioned-9, below-10)
punct(selects-3, .-11)
","root(ROOT-0, selects-3)
det(User-2, The-1)
nsubj(selects-3, User-2)
det(number-5, the-4)
dobj(selects-3, number-5)
case(dropdown-8, through-6)
det(dropdown-8, the-7)
nmod:through(selects-3, dropdown-8)
acl(dropdown-8, mentioned-9)
nmod(mentioned-9, below-10)
punct(selects-3, .-11)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=User selects the parameter days/hours through the next drop-down menu. CharacterOffsetBegin=1113 CharacterOffsetEnd=1183 Tokens=[User-1, selects-2, the-3, parameter-4, days/hours-5, through-6, the-7, next-8, drop-down-9, menu-10, .-11] SentenceIndex=13 TokenBegin=211 TokenEnd=222 Mentions=[] CollapsedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod:through)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 BasicDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod:through)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 EnhancedDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod:through)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (nmod:through)
      -> through/IN (case)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (NP (NN User)) (VP (VBZ selects) (SBAR (S (NP (DT the) (NN parameter)) (VP (VBZ days/hours) (PP (IN through) (NP (DT the) (JJ next) (JJ drop-down) (NN menu))))))) (. .))) BinarizedTree=(ROOT (S (NP (NN User)) (@S (VP (VBZ selects) (SBAR (S (NP (DT the) (NN parameter)) (VP (VBZ days/hours) (PP (IN through) (NP (DT the) (@NP (JJ next) (@NP (JJ drop-down) (NN menu))))))))) (. .)))) CorefMentions=[the next drop-down menu, User, the parameter] AlternativeDependencies=-> selects/VBZ (root)
  -> User/NN (nsubj)
  -> days/hours/VBZ (ccomp)
    -> parameter/NN (nsubj)
      -> the/DT (det)
    -> menu/NN (prep_through)
      -> the/DT (det)
      -> next/JJ (amod)
      -> drop-down/JJ (amod)
 SentimentAnnotatedTree=(ROOT (NP User) (@S (VP (VBZ selects) (SBAR (NP (DT the) (NN parameter)) (VP (VBZ days/hours) (PP (IN through) (NP (DT the) (@NP (JJ next) (@NP (JJ drop-down) (NN menu)))))))) (. .))) SentimentClass=Negative]","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
det(parameter-4, the-3)
nsubj(days/hours-5, parameter-4)
ccomp(selects-2, days/hours-5)
case(menu-10, through-6)
det(menu-10, the-7)
amod(menu-10, next-8)
amod(menu-10, drop-down-9)
nmod(days/hours-5, menu-10)
punct(selects-2, .-11)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
det(parameter-4, the-3)
nsubj(days/hours-5, parameter-4)
ccomp(selects-2, days/hours-5)
case(menu-10, through-6)
det(menu-10, the-7)
amod(menu-10, next-8)
amod(menu-10, drop-down-9)
nmod:through(days/hours-5, menu-10)
punct(selects-2, .-11)
","root(ROOT-0, selects-2)
nsubj(selects-2, User-1)
det(parameter-4, the-3)
nsubj(days/hours-5, parameter-4)
ccomp(selects-2, days/hours-5)
case(menu-10, through-6)
det(menu-10, the-7)
amod(menu-10, next-8)
amod(menu-10, drop-down-9)
nmod:through(days/hours-5, menu-10)
punct(selects-2, .-11)
","Negative"
"CORTEX","The user needs to subscribe to get the alerts. User selects the Appliance_type on which they want to get alerts.  If the user wants to set the alert for a specific appliance Then the User clicks on that appliance, Else User selects as many appliances as possible they want by checking the box. User clicks on Actions drop down tab. User selects Manage_Alerts. If the user wants to turn on the alert Then select the Turn On the Radio button, Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. If User selects as many appliances as possible they want by checking the box Then Click on three-dot to extend the dropdown, Else click on one appliance. User selects Manage_Alerts. If the user wants to turn On the alert, Then select the Turn On Radio button Else select the Turn-Off radio button. The User selects the number through the dropdown mentioned below. User selects the parameter days/hours through the next drop-down menu. If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made.","[class edu.stanford.nlp.ling.CoreAnnotations$TextAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$CharacterOffsetEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$SentenceIndexAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenBeginAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$TokenEndAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$MentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$BasicDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$CollapsedCCProcessedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedDependenciesAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$EnhancedPlusPlusDependenciesAnnotation, class edu.stanford.nlp.ling.CoreAnnotations$KBPTriplesAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$TreeAnnotation, class edu.stanford.nlp.trees.TreeCoreAnnotations$BinarizedTreeAnnotation, class edu.stanford.nlp.coref.CorefCoreAnnotations$CorefMentionsAnnotation, class edu.stanford.nlp.semgraph.SemanticGraphCoreAnnotations$AlternativeDependenciesAnnotation, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentAnnotatedTree, class edu.stanford.nlp.sentiment.SentimentCoreAnnotations$SentimentClass]","[Text=If the user wants to save the changes Then click on the Save button Else click on the cancel button to not update the changes made. CharacterOffsetBegin=1184 CharacterOffsetEnd=1315 Tokens=[If-1, the-2, user-3, wants-4, to-5, save-6, the-7, changes-8, Then-9, click-10, on-11, the-12, Save-13, button-14, Else-15, click-16, on-17, the-18, cancel-19, button-20, to-21, not-22, update-23, the-24, changes-25, made-26, .-27] SentenceIndex=14 TokenBegin=222 TokenEnd=249 Mentions=[] CollapsedDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod:on)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 BasicDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 CollapsedCCProcessedDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod:on)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 EnhancedDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> user/NN (nsubj:xsubj)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod:on)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl:to)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 EnhancedPlusPlusDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> user/NN (nsubj:xsubj)
      -> to/TO (mark)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (nmod:on)
          -> on/IN (case)
          -> the/DT (det)
          -> Save/NNP (compound)
          -> Else/RB (advmod)
  -> the/DT (advmod)
    -> on/IN (case)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (advcl:to)
      -> to/TO (mark)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
  -> ./. (punct)
 KBPTriples=[] Tree=(ROOT (S (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (VB save) (SBAR (S (NP (DT the) (NNS changes)) (ADVP (RB Then)) (VP (VBP click) (PP (IN on) (NP (DT the) (NNP Save) (NN button) (RB Else)))))))))))) (VP (VBP click) (ADVP (IN on) (DT the)) (VP (VB cancel) (NP (NN button)) (S (VP (TO to) (VP (RB not) (VB update) (S (NP (DT the) (NNS changes)) (VP (VBN made)))))))) (. .))) BinarizedTree=(ROOT (S (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (VP (TO to) (VP (VB save) (SBAR (S (NP (DT the) (NNS changes)) (@S (ADVP (RB Then)) (VP (VBP click) (PP (IN on) (NP (DT the) (@NP (NNP Save) (@NP (NN button) (RB Else))))))))))))))) (@S (VP (@VP (VBP click) (ADVP (IN on) (DT the))) (VP (@VP (VB cancel) (NP (NN button))) (S (VP (TO to) (VP (RB not) (@VP (VB update) (S (NP (DT the) (NNS changes)) (VP (VBN made))))))))) (. .)))) CorefMentions=[the user, the changes, the Save button Else, the, button, the changes] AlternativeDependencies=-> click/VBP (root)
  -> wants/VBZ (csubj)
    -> If/IN (mark)
    -> user/NN (nsubj)
      -> the/DT (det)
    -> save/VB (xcomp)
      -> to/TO (aux)
      -> click/VBP (ccomp)
        -> changes/NNS (nsubj)
          -> the/DT (det)
        -> Then/RB (advmod)
        -> button/NN (prep_on)
          -> the/DT (det)
          -> Save/NNP (nn)
          -> Else/RB (advmod)
  -> on/IN (advmod)
    -> the/DT (dep)
  -> cancel/VB (dep)
    -> button/NN (dobj)
    -> update/VB (vmod)
      -> to/TO (aux)
      -> not/RB (neg)
      -> made/VBN (dep)
        -> changes/NNS (nsubj)
          -> the/DT (det)
 SentimentAnnotatedTree=(ROOT (SBAR (IN If) (S (NP (DT the) (NN user)) (VP (VBZ wants) (S (TO to) (VP (VB save) (SBAR (NP (DT the) (NNS changes)) (@S (ADVP Then) (VP (VBP click) (PP (IN on) (NP (DT the) (@NP (NNP Save) (@NP (NN button) (RB Else))))))))))))) (@S (VP (@VP (VBP click) (ADVP (IN on) (DT the))) (VP (@VP (VB cancel) (NP button)) (S (TO to) (VP (RB not) (@VP (VB update) (S (NP (DT the) (NNS changes)) (VP made))))))) (. .))) SentimentClass=Negative]","root(ROOT-0, click-16)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
csubj(click-16, wants-4)
mark(save-6, to-5)
xcomp(wants-4, save-6)
det(changes-8, the-7)
nsubj(click-10, changes-8)
advmod(click-10, Then-9)
ccomp(save-6, click-10)
case(button-14, on-11)
det(button-14, the-12)
compound(button-14, Save-13)
nmod(click-10, button-14)
advmod(button-14, Else-15)
case(the-18, on-17)
advmod(click-16, the-18)
dep(click-16, cancel-19)
dobj(cancel-19, button-20)
mark(update-23, to-21)
neg(update-23, not-22)
advcl(cancel-19, update-23)
det(changes-25, the-24)
nsubj(made-26, changes-25)
dep(update-23, made-26)
punct(click-16, .-27)
","root(ROOT-0, click-16)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(save-6, user-3)
csubj(click-16, wants-4)
mark(save-6, to-5)
xcomp(wants-4, save-6)
det(changes-8, the-7)
nsubj(click-10, changes-8)
advmod(click-10, Then-9)
ccomp(save-6, click-10)
case(button-14, on-11)
det(button-14, the-12)
compound(button-14, Save-13)
nmod:on(click-10, button-14)
advmod(button-14, Else-15)
case(the-18, on-17)
advmod(click-16, the-18)
dep(click-16, cancel-19)
dobj(cancel-19, button-20)
mark(update-23, to-21)
neg(update-23, not-22)
advcl:to(cancel-19, update-23)
det(changes-25, the-24)
nsubj(made-26, changes-25)
dep(update-23, made-26)
punct(click-16, .-27)
","root(ROOT-0, click-16)
mark(wants-4, If-1)
det(user-3, the-2)
nsubj(wants-4, user-3)
nsubj:xsubj(save-6, user-3)
csubj(click-16, wants-4)
mark(save-6, to-5)
xcomp(wants-4, save-6)
det(changes-8, the-7)
nsubj(click-10, changes-8)
advmod(click-10, Then-9)
ccomp(save-6, click-10)
case(button-14, on-11)
det(button-14, the-12)
compound(button-14, Save-13)
nmod:on(click-10, button-14)
advmod(button-14, Else-15)
case(the-18, on-17)
advmod(click-16, the-18)
dep(click-16, cancel-19)
dobj(cancel-19, button-20)
mark(update-23, to-21)
neg(update-23, not-22)
advcl:to(cancel-19, update-23)
det(changes-25, the-24)
nsubj(made-26, changes-25)
dep(update-23, made-26)
punct(click-16, .-27)
","Negative"
